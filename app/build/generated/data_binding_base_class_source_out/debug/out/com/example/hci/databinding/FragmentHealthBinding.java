// Generated by view binder compiler. Do not edit!
package com.example.hci.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hci.R;
import com.github.mikephil.charting.charts.LineChart;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHealthBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnViewMore;

  @NonNull
  public final TextView currentScoreValue;

  @NonNull
  public final LineChart depressionPredictionChart;

  @NonNull
  public final TextView predictScoreValue;

  @NonNull
  public final LineChart sleepChart;

  @NonNull
  public final LineChart stepsChart;

  private FragmentHealthBinding(@NonNull LinearLayout rootView, @NonNull Button btnViewMore,
      @NonNull TextView currentScoreValue, @NonNull LineChart depressionPredictionChart,
      @NonNull TextView predictScoreValue, @NonNull LineChart sleepChart,
      @NonNull LineChart stepsChart) {
    this.rootView = rootView;
    this.btnViewMore = btnViewMore;
    this.currentScoreValue = currentScoreValue;
    this.depressionPredictionChart = depressionPredictionChart;
    this.predictScoreValue = predictScoreValue;
    this.sleepChart = sleepChart;
    this.stepsChart = stepsChart;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHealthBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHealthBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_health, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHealthBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_view_more;
      Button btnViewMore = ViewBindings.findChildViewById(rootView, id);
      if (btnViewMore == null) {
        break missingId;
      }

      id = R.id.current_score_value;
      TextView currentScoreValue = ViewBindings.findChildViewById(rootView, id);
      if (currentScoreValue == null) {
        break missingId;
      }

      id = R.id.depressionPredictionChart;
      LineChart depressionPredictionChart = ViewBindings.findChildViewById(rootView, id);
      if (depressionPredictionChart == null) {
        break missingId;
      }

      id = R.id.predict_score_value;
      TextView predictScoreValue = ViewBindings.findChildViewById(rootView, id);
      if (predictScoreValue == null) {
        break missingId;
      }

      id = R.id.sleepChart;
      LineChart sleepChart = ViewBindings.findChildViewById(rootView, id);
      if (sleepChart == null) {
        break missingId;
      }

      id = R.id.stepsChart;
      LineChart stepsChart = ViewBindings.findChildViewById(rootView, id);
      if (stepsChart == null) {
        break missingId;
      }

      return new FragmentHealthBinding((LinearLayout) rootView, btnViewMore, currentScoreValue,
          depressionPredictionChart, predictScoreValue, sleepChart, stepsChart);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

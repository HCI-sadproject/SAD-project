// Generated by view binder compiler. Do not edit!
package com.example.hci.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hci.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RegisterBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final EditText registerBirth;

  @NonNull
  public final Button registerButton;

  @NonNull
  public final RadioButton registerDivorced;

  @NonNull
  public final EditText registerEmail;

  @NonNull
  public final RadioGroup registerGender;

  @NonNull
  public final LinearLayout registerLayout;

  @NonNull
  public final RadioButton registerMan;

  @NonNull
  public final RadioGroup registerMaritalStatus;

  @NonNull
  public final RadioButton registerMarried;

  @NonNull
  public final EditText registerName;

  @NonNull
  public final EditText registerPassword;

  @NonNull
  public final EditText registerPhone;

  @NonNull
  public final EditText registerPwCheck;

  @NonNull
  public final RadioButton registerSingle;

  @NonNull
  public final RadioButton registerWidowed;

  @NonNull
  public final RadioButton registerWoman;

  private RegisterBinding(@NonNull LinearLayout rootView, @NonNull ImageButton backButton,
      @NonNull EditText registerBirth, @NonNull Button registerButton,
      @NonNull RadioButton registerDivorced, @NonNull EditText registerEmail,
      @NonNull RadioGroup registerGender, @NonNull LinearLayout registerLayout,
      @NonNull RadioButton registerMan, @NonNull RadioGroup registerMaritalStatus,
      @NonNull RadioButton registerMarried, @NonNull EditText registerName,
      @NonNull EditText registerPassword, @NonNull EditText registerPhone,
      @NonNull EditText registerPwCheck, @NonNull RadioButton registerSingle,
      @NonNull RadioButton registerWidowed, @NonNull RadioButton registerWoman) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.registerBirth = registerBirth;
    this.registerButton = registerButton;
    this.registerDivorced = registerDivorced;
    this.registerEmail = registerEmail;
    this.registerGender = registerGender;
    this.registerLayout = registerLayout;
    this.registerMan = registerMan;
    this.registerMaritalStatus = registerMaritalStatus;
    this.registerMarried = registerMarried;
    this.registerName = registerName;
    this.registerPassword = registerPassword;
    this.registerPhone = registerPhone;
    this.registerPwCheck = registerPwCheck;
    this.registerSingle = registerSingle;
    this.registerWidowed = registerWidowed;
    this.registerWoman = registerWoman;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.register_birth;
      EditText registerBirth = ViewBindings.findChildViewById(rootView, id);
      if (registerBirth == null) {
        break missingId;
      }

      id = R.id.registerButton;
      Button registerButton = ViewBindings.findChildViewById(rootView, id);
      if (registerButton == null) {
        break missingId;
      }

      id = R.id.register_divorced;
      RadioButton registerDivorced = ViewBindings.findChildViewById(rootView, id);
      if (registerDivorced == null) {
        break missingId;
      }

      id = R.id.register_email;
      EditText registerEmail = ViewBindings.findChildViewById(rootView, id);
      if (registerEmail == null) {
        break missingId;
      }

      id = R.id.register_gender;
      RadioGroup registerGender = ViewBindings.findChildViewById(rootView, id);
      if (registerGender == null) {
        break missingId;
      }

      LinearLayout registerLayout = (LinearLayout) rootView;

      id = R.id.register_man;
      RadioButton registerMan = ViewBindings.findChildViewById(rootView, id);
      if (registerMan == null) {
        break missingId;
      }

      id = R.id.register_marital_status;
      RadioGroup registerMaritalStatus = ViewBindings.findChildViewById(rootView, id);
      if (registerMaritalStatus == null) {
        break missingId;
      }

      id = R.id.register_married;
      RadioButton registerMarried = ViewBindings.findChildViewById(rootView, id);
      if (registerMarried == null) {
        break missingId;
      }

      id = R.id.register_name;
      EditText registerName = ViewBindings.findChildViewById(rootView, id);
      if (registerName == null) {
        break missingId;
      }

      id = R.id.register_password;
      EditText registerPassword = ViewBindings.findChildViewById(rootView, id);
      if (registerPassword == null) {
        break missingId;
      }

      id = R.id.register_phone;
      EditText registerPhone = ViewBindings.findChildViewById(rootView, id);
      if (registerPhone == null) {
        break missingId;
      }

      id = R.id.register_pwCheck;
      EditText registerPwCheck = ViewBindings.findChildViewById(rootView, id);
      if (registerPwCheck == null) {
        break missingId;
      }

      id = R.id.register_single;
      RadioButton registerSingle = ViewBindings.findChildViewById(rootView, id);
      if (registerSingle == null) {
        break missingId;
      }

      id = R.id.register_widowed;
      RadioButton registerWidowed = ViewBindings.findChildViewById(rootView, id);
      if (registerWidowed == null) {
        break missingId;
      }

      id = R.id.register_woman;
      RadioButton registerWoman = ViewBindings.findChildViewById(rootView, id);
      if (registerWoman == null) {
        break missingId;
      }

      return new RegisterBinding((LinearLayout) rootView, backButton, registerBirth, registerButton,
          registerDivorced, registerEmail, registerGender, registerLayout, registerMan,
          registerMaritalStatus, registerMarried, registerName, registerPassword, registerPhone,
          registerPwCheck, registerSingle, registerWidowed, registerWoman);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

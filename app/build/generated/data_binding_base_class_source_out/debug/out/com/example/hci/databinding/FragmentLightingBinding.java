// Generated by view binder compiler. Do not edit!
package com.example.hci.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hci.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import top.defaults.colorpicker.ColorPickerView;

public final class FragmentLightingBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnBlue;

  @NonNull
  public final Button btnBrown;

  @NonNull
  public final Button btnConnect;

  @NonNull
  public final Button btnGreen;

  @NonNull
  public final Button btnLightToggle;

  @NonNull
  public final LinearLayout colorButtons;

  @NonNull
  public final ColorPickerView colorPicker;

  @NonNull
  public final TextView colorTitle;

  @NonNull
  public final LinearLayout connectionSection;

  @NonNull
  public final TextView connectionStatus;

  @NonNull
  public final TextView lightingTitle;

  @NonNull
  public final TextView paletteTitle;

  private FragmentLightingBinding(@NonNull ScrollView rootView, @NonNull Button btnBlue,
      @NonNull Button btnBrown, @NonNull Button btnConnect, @NonNull Button btnGreen,
      @NonNull Button btnLightToggle, @NonNull LinearLayout colorButtons,
      @NonNull ColorPickerView colorPicker, @NonNull TextView colorTitle,
      @NonNull LinearLayout connectionSection, @NonNull TextView connectionStatus,
      @NonNull TextView lightingTitle, @NonNull TextView paletteTitle) {
    this.rootView = rootView;
    this.btnBlue = btnBlue;
    this.btnBrown = btnBrown;
    this.btnConnect = btnConnect;
    this.btnGreen = btnGreen;
    this.btnLightToggle = btnLightToggle;
    this.colorButtons = colorButtons;
    this.colorPicker = colorPicker;
    this.colorTitle = colorTitle;
    this.connectionSection = connectionSection;
    this.connectionStatus = connectionStatus;
    this.lightingTitle = lightingTitle;
    this.paletteTitle = paletteTitle;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLightingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLightingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_lighting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLightingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_blue;
      Button btnBlue = ViewBindings.findChildViewById(rootView, id);
      if (btnBlue == null) {
        break missingId;
      }

      id = R.id.btn_brown;
      Button btnBrown = ViewBindings.findChildViewById(rootView, id);
      if (btnBrown == null) {
        break missingId;
      }

      id = R.id.btn_connect;
      Button btnConnect = ViewBindings.findChildViewById(rootView, id);
      if (btnConnect == null) {
        break missingId;
      }

      id = R.id.btn_green;
      Button btnGreen = ViewBindings.findChildViewById(rootView, id);
      if (btnGreen == null) {
        break missingId;
      }

      id = R.id.btn_light_toggle;
      Button btnLightToggle = ViewBindings.findChildViewById(rootView, id);
      if (btnLightToggle == null) {
        break missingId;
      }

      id = R.id.color_buttons;
      LinearLayout colorButtons = ViewBindings.findChildViewById(rootView, id);
      if (colorButtons == null) {
        break missingId;
      }

      id = R.id.colorPicker;
      ColorPickerView colorPicker = ViewBindings.findChildViewById(rootView, id);
      if (colorPicker == null) {
        break missingId;
      }

      id = R.id.color_title;
      TextView colorTitle = ViewBindings.findChildViewById(rootView, id);
      if (colorTitle == null) {
        break missingId;
      }

      id = R.id.connection_section;
      LinearLayout connectionSection = ViewBindings.findChildViewById(rootView, id);
      if (connectionSection == null) {
        break missingId;
      }

      id = R.id.connection_status;
      TextView connectionStatus = ViewBindings.findChildViewById(rootView, id);
      if (connectionStatus == null) {
        break missingId;
      }

      id = R.id.lighting_title;
      TextView lightingTitle = ViewBindings.findChildViewById(rootView, id);
      if (lightingTitle == null) {
        break missingId;
      }

      id = R.id.palette_title;
      TextView paletteTitle = ViewBindings.findChildViewById(rootView, id);
      if (paletteTitle == null) {
        break missingId;
      }

      return new FragmentLightingBinding((ScrollView) rootView, btnBlue, btnBrown, btnConnect,
          btnGreen, btnLightToggle, colorButtons, colorPicker, colorTitle, connectionSection,
          connectionStatus, lightingTitle, paletteTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
